version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hrbooteh-postgres
    environment:
      POSTGRES_DB: hrbooteh_db
      POSTGRES_USER: hrbooteh_user
      POSTGRES_PASSWORD: hrbooteh_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - hrbooteh-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hrbooteh_user -d hrbooteh_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: hrbooteh-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hrbooteh-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hrbooteh-backend
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql://hrbooteh_user:hrbooteh_password@postgres:5432/hrbooteh_db
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=production-secret-key-change-this
      - ALLOWED_ORIGINS=["http://localhost:3000","http://localhost:8080","https://yourdomain.com"]
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hrbooteh-network
    volumes:
      - ./backend/logs:/app/logs
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: hrbooteh-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - hrbooteh-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 3s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  hrbooteh-network:
    driver: bridge
